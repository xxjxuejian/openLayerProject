<!DOCTYPE HTML PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title>图形交互编辑（移动位置）</title>
    <link href="../../css/ol.css" rel="stylesheet" type="text/css" />
    <script src="../../libs/ol5/ol.js" type="text/javascript"></script>
    <style type="text/css">
        #menu {
            text-align: center;
            width: 100%;
            height: 20px;
            padding: 5px 10px;
            font-size: 14px;
            font-family: "微软雅黑";
            left: 10px;
        }

        .checkbox {
            margin-right: 30px;
        }
    </style>
</head>
<body>
    <div id="menu">
        <label>
            修改几何图形：请用鼠标选择修改要素，选中后再修改其几何信息
        </label>
    </div>
    <div id="mapCon" style="width: 100%; height: 95%; position: absolute;">
    </div>
    <script type="text/javascript">

        //实例化Map对象加载地图,默认底图加载MapQuest地图
        var map = new ol.Map({
            layers: [
                new ol.layer.Tile({
                    title: "天地图矢量图层",
                    source: new ol.source.XYZ({
                        url: "http://t0.tianditu.com/DataServer?T=vec_w&x={x}&y={y}&l={z}&tk=3bc6874f2b919aa581635abab7759a3f",
                        wrapX: false
                    })
                }),
                new ol.layer.Tile({
                    title: "天地图矢量图层注记",
                    source: new ol.source.XYZ({
                        url: "http://t0.tianditu.com/DataServer?T=cva_w&x={x}&y={y}&l={z}&tk=3bc6874f2b919aa581635abab7759a3f",
                        wrapX: false
                    }),
                    preload: Infinity
                })
            ],
            //地图容器div的ID
            target: 'mapCon',
            view: new ol.View({
                //地图初始中心点
                center: [114.2905, 30.5607],
                projection: "EPSG:4326",
                minZoom: 2,
                zoom: 12
            })
        });

        //绘制的几何图形要素
        var pointFeature = new ol.Feature(new ol.geom.Point([114.1947, 30.5255]));
        var lineFeature = new ol.Feature(
            new ol.geom.LineString([[114.2218, 30.5695], [114.2829, 30.4912]]));
        var polygonFeature = new ol.Feature(
            new ol.geom.Polygon([[[114.2757, 30.5822], [114.3526, 30.5879], [114.3608, 30.5367], [114.3234, 30.5187], [114.2826, 30.5530]]]));

        //实例化一个矢量图层Vector作为绘制层
        var source = new ol.source.Vector({
            features: [pointFeature, lineFeature, polygonFeature]
        });
        var vector = new ol.layer.Vector({
            source: source,
            style: new ol.style.Style({
                fill: new ol.style.Fill({
                    color: 'rgba(255, 255, 255, 0.2)'
                }),
                stroke: new ol.style.Stroke({
                    color: '#ff0000',
                    width: 2
                }),
                image: new ol.style.Circle({
                    radius: 7,
                    fill: new ol.style.Fill({
                        color: '#ff0000'
                    })
                })
            })
        });
        //将绘制层添加到地图容器中
        map.addLayer(vector);

        //定义修改几何图形功能控件
        var Modify = {
            init: function () {
                //初始化一个交互选择控件,并添加到地图容器中
                this.select = new ol.interaction.Select();
                map.addInteraction(this.select);
                //初始化一个交互编辑控件，并添加到地图容器中
                this.modify = new ol.interaction.Modify({
                    //选中的要素
                    features: this.select.getFeatures()
                });
                map.addInteraction(this.modify);
                //设置几何图形变更的处理
                this.setEvents();
            },
            setEvents: function () {
                //选中的要素
                var selectedFeatures = this.select.getFeatures();
                //添加选中要素变更事件
                this.select.on('change:active', function () {
                    selectedFeatures.forEach(selectedFeatures.remove, selectedFeatures);
                });
            },
            setActive: function (active) {
                //激活选择要素控件
                this.select.setActive(active);
                //激活修改要素控件
                this.modify.setActive(active);
            }
        };
        //初始化几何图形修改控件
        Modify.init();
        //激活几何图形修改控件;
        Modify.setActive(true);
    </script>
</body>
</html>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title>添加聚合标注</title>
    <link href="../../css/ol.css" rel="stylesheet" type="text/css" />
    <script src="../../libs/ol5/ol.js" type="text/javascript"></script>
    <!--  引入第三方插件库 -->
    <script src="../../libs/jquery-1.11.2.min.js" type="text/javascript"></script>
    <!--导入本页面外部样式表-->
    <link href="../../css/style.css" rel="stylesheet" type="text/css" />
    <style type="text/css">
        body, html, div, ul, li, iframe, p, img {
            border: none;
            padding: 0;
            margin: 0;
        }

        #mapCon {
            width: 100%;
            height: 90%;
            position: absolute;
        }
    </style>
</head>
<body>
    <div class="ToolLib">
        <input type="button" class="ButtonLib" id="addFeatures" value="添加聚合标注" />
        <input type="button" class="ButtonLib" id="removeFeatures" value="移除聚合标注" />
    </div>
    <div id="mapCon">
    </div>
    <script type="text/javascript">
        //此示例创建10000个要素
        var count = 10000;
        var features = new Array(count);
        var e = 4500000;
        for (var i = 0; i < count; ++i) {
            var coordinates = [2 * e * Math.random() - e, 2 * e * Math.random() - e];
            features[i] = new ol.Feature(new ol.geom.Point(coordinates));
        }
        //矢量要素数据源
        var source = new ol.source.Vector({
            features: features
        });
        //聚合标注数据源
        var clusterSource = new ol.source.Cluster({
            distance: 40,
            source: source
        });
        //加载聚合标注的矢量图层
        var styleCache = {};
        var clusters = new ol.layer.Vector({
            source: clusterSource,
            style: function (feature, resolution) {
                var size = feature.get('features').length;
                var style = styleCache[size];
                if (!style) {
                    style = [
                        new ol.style.Style({
                            image: new ol.style.Circle({
                                radius: 10,
                                stroke: new ol.style.Stroke({
                                    color: '#fff'
                                }),
                                fill: new ol.style.Fill({
                                    color: '#3399CC'
                                })
                            }),
                            text: new ol.style.Text({
                                text: size.toString(),
                                fill: new ol.style.Fill({
                                    color: '#fff'
                                })
                            })
                        })
                    ];
                    styleCache[size] = style;
                }
                return style;
            }
        });

        //实例化Map对象加载地图，默认加载聚合标注图层
        var map = new ol.Map({
            layers: [
                new ol.layer.Tile({
                    title: "天地图矢量图层",
                    source: new ol.source.XYZ({
                        url: "http://t0.tianditu.com/DataServer?T=vec_w&x={x}&y={y}&l={z}&tk=3bc6874f2b919aa581635abab7759a3f",
                        wrapX: false
                    })
                }),
                //聚合标注图层
                clusters
            ],
            //地图容器div的ID
            target: 'mapCon',
            view: new ol.View({
                //地图初始中心点
                center: [0, 0],
                minZoom: 2,
                zoom: 2
            })
        });

        //添加聚合标注
        document.getElementById('addFeatures').onclick = function () {
            //当前聚合标注数据源中的要素
            var currentFeatrues = clusterSource.getSource().getFeatures();
            //如果聚合标注数据源中没有要素，则重新添加要素
            if (currentFeatrues.length == 0) {
                clusterSource.getSource().addFeatures(features);
                clusters.setSource(clusterSource);
                map.addLayer(clusters);
            }
        };
        //移除聚合标注
        document.getElementById('removeFeatures').onclick = function () {
            //当前聚合标注数据源中的要素
            var currentFeatrues = clusterSource.getSource().getFeatures();
            //如果聚合标注数据源中没有要素，则重新添加要素
            if (currentFeatrues.length != 0) {
                //移除聚合标注数据源中的所有要素
                clusterSource.getSource().clear();
                //移除标注图层
                map.removeLayer(clusters);
            }
        };
        //一开始移除聚合标注
        document.getElementById('removeFeatures').onclick();
    </script>
</body>
</html>

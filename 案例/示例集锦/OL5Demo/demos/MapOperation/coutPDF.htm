<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <title>导出PDF</title>
    <link href="../../css/ol.css" rel="stylesheet" type="text/css" />
    <script src="../../libs/ol5/ol.js" type="text/javascript"></script>
    <script src="../../libs/other/jspdf.min.js" type="text/javascript"></script>
    <!--导入本页面外部样式表-->
    <link href="../../css/style.css" rel="stylesheet" type="text/css" />
    <style>
        #mapCon {
            width: 100%;
            height: 90%;
            position: absolute;
        }
    </style>
</head>
<body>
    <div class="ToolLib">
        <label><strong>图片大小:</strong> </label>
        <select id="format" style="height: 25px;">
            <option value="a0">A0 (慢)</option>
            <option value="a1">A1</option>
            <option value="a2">A2</option>
            <option value="a3">A3</option>
            <option value="a4" selected>A4</option>
            <option value="a5">A5 (快)</option>
        </select>
        <label><strong>分辨率</strong></label>
        <select id="resolution">
            <option value="72">72 dpi (快)</option>
            <option value="150">150 dpi</option>
            <option value="300">300 dpi (慢)</option>
        </select>
        <input type="button" class="ButtonLib" id="export-pdf" value="下载 PDF" />
    </div>
    <div id="mapCon">
    </div>

    <script>
        var raster = new ol.layer.Tile({
            title: "天地图矢量图层",
            source: new ol.source.XYZ({
                url: "http://t0.tianditu.com/DataServer?T=vec_w&x={x}&y={y}&l={z}&tk=3bc6874f2b919aa581635abab7759a3f",
                wrapX: false
            })
        });

        var format = new ol.format.WKT();
        var feature = format.readFeature(
            'POLYGON((10.689697265625 -25.0927734375, 34.595947265625 ' +
            '-20.1708984375, 38.814697265625 -35.6396484375, 13.502197265625 ' +
            '-39.1552734375, 10.689697265625 -25.0927734375))');
        feature.getGeometry().transform('EPSG:4326', 'EPSG:3857');
        var vector = new ol.layer.Vector({
            source: new ol.source.Vector({
                features: [feature]
            })
        });


        var map = new ol.Map({
            layers: [raster, vector],
            target: 'mapCon',
            controls: ol.control.defaults({
                attributionOptions: /** @type {olx.control.AttributionOptions} */ ({
                    collapsible: false
                })
            }),
            view: new ol.View({
                center: [0, 0],
                zoom: 2
            })
        });


        var dims = {
            a0: [1189, 841],
            a1: [841, 594],
            a2: [594, 420],
            a3: [420, 297],
            a4: [297, 210],
            a5: [210, 148]
        };

        var loading = 0;
        var loaded = 0;

        var exportButton = document.getElementById('export-pdf');

        exportButton.addEventListener('click', function () {

            exportButton.disabled = true;
            document.body.style.cursor = 'progress';

            var format = document.getElementById('format').value;
            var resolution = document.getElementById('resolution').value;
            var dim = dims[format];
            var width = Math.round(dim[0] * resolution / 25.4);
            var height = Math.round(dim[1] * resolution / 25.4);
            var size = /** @type {ol.Size} */ (map.getSize());
            var extent = map.getView().calculateExtent(size);

            var source = raster.getSource();

      /*       var tileLoadStart = function () {
                ++loading;
            }; */

           /*  var tileLoadEnd = function () {
                ++loaded;
                if (loading === loaded) {
                    var canvas = this;
                    window.setTimeout(function () {
                        loading = 0;
                        loaded = 0;
                        var data = canvas.toDataURL('image/jpeg');
                        var pdf = new jsPDF('landscape', undefined, format);
                        pdf.addImage(data, 'JPEG', 0, 0, dim[0], dim[1]);
                        pdf.save('map.pdf');
                        source.un('tileloadstart', tileLoadStart);
                        source.un('tileloadend', tileLoadEnd, canvas);
                        source.un('tileloaderror', tileLoadEnd, canvas);
                        map.setSize(size);
                        map.getView().fit(extent, size);
                        map.renderSync();
                        exportButton.disabled = false;
                        document.body.style.cursor = 'auto';
                    }, 100);
                }
            };
 */
            map.once('postcompose', function (event) {
                var canvas = event.context.canvas;
                var data = canvas.toDataURL('image/jpeg');
                        var pdf = new jsPDF('landscape', undefined, format);
                        pdf.addImage(data, 'JPEG', 0, 0, dim[0], dim[1]);
                        pdf.save('map.pdf');
                // source.on('tileloadstart', tileLoadStart);
                // source.on('tileloadend', tileLoadEnd, event.context.canvas);
                // source.on('tileloaderror', tileLoadEnd, event.context.canvas);
            });

            map.setSize([width, height]);
            map.getView().fit(extent, /** @type {ol.Size} */ (map.getSize()));
            map.renderSync();
            exportButton.disabled = false;
            document.body.style.cursor = 'auto';

        }, false);
    </script>
</body>
</html>